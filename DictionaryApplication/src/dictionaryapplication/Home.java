/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dictionaryapplication;

import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.Date;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class Home extends javax.swing.JFrame {
    
    private Dictionary.Mode mode;
    private String searchingWord;
    private Meaning searchingMeaning;

    /**
     * Creates new form Home
     */
    public Home() {
        this.mode = Dictionary.Mode.ENG_VIE_MODE;
        initComponents();
        removeBtn.setEnabled(false);
        addFavoriteBtn.setEnabled(false);
    }
    
    public void changeFavoriteBtnStatus(boolean status) {
        if(status == false) {
            addFavoriteBtn.setBackground(null);
            addFavoriteBtn.setText("Add to favorite list");
        } else {
            addFavoriteBtn.setBackground(Color.yellow);
            addFavoriteBtn.setText("Remove from favorite list");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        inputLable = new javax.swing.JLabel();
        swapBtn = new javax.swing.JButton();
        outputLabel = new javax.swing.JLabel();
        searchWordField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultField = new javax.swing.JTextArea();
        removeBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        addFavoriteBtn = new javax.swing.JButton();
        addWordBtn = new javax.swing.JButton();
        favoriteListBtn = new javax.swing.JButton();
        searchLogBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        inputLable.setText("English");

        swapBtn.setText("Swap");
        swapBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swapBtnActionPerformed(evt);
            }
        });

        outputLabel.setText("Vietnamese");

        searchWordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchWordFieldActionPerformed(evt);
            }
        });

        resultField.setColumns(20);
        resultField.setRows(5);
        jScrollPane1.setViewportView(resultField);

        removeBtn.setText("Remove this word");
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        addFavoriteBtn.setText("Add to favorite list");
        addFavoriteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFavoriteBtnActionPerformed(evt);
            }
        });

        addWordBtn.setText("Add new word");
        addWordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWordBtnActionPerformed(evt);
            }
        });

        favoriteListBtn.setText("Favorite List");
        favoriteListBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                favoriteListBtnActionPerformed(evt);
            }
        });

        searchLogBtn.setText("Search Log");
        searchLogBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchLogBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(searchWordField, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(inputLable)))
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(swapBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(outputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addWordBtn)
                        .addGap(18, 18, 18)
                        .addComponent(favoriteListBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchLogBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(removeBtn)
                        .addGap(98, 98, 98)
                        .addComponent(addFavoriteBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addWordBtn)
                    .addComponent(favoriteListBtn)
                    .addComponent(searchLogBtn))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(inputLable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchWordField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(outputLabel)
                                .addGap(14, 14, 14)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(swapBtn)
                                .addGap(36, 36, 36)
                                .addComponent(searchBtn)))))
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeBtn)
                    .addComponent(addFavoriteBtn))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchLogBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchLogBtnActionPerformed
        SearchLogFrame frame = new SearchLogFrame();
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setVisible(true);
    }//GEN-LAST:event_searchLogBtnActionPerformed

    private void favoriteListBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_favoriteListBtnActionPerformed
        FavoriteListFrame frame = new FavoriteListFrame();
        frame.setVisible(true);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_favoriteListBtnActionPerformed

    private void addWordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWordBtnActionPerformed
        AddWordFrame addWordFrame = new AddWordFrame();
        addWordFrame.setVisible(true);
        addWordFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_addWordBtnActionPerformed

    private void addFavoriteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFavoriteBtnActionPerformed
        ProcessingDialog dialog = new ProcessingDialog(this, true);
        
        dialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowOpened(WindowEvent e) {
                String fileName = mode == Dictionary.Mode.ENG_VIE_MODE ? "Anh_Viet.xml" : "Viet_Anh.xml";
                Map<String, Meaning> map = mode == Dictionary.Mode.ENG_VIE_MODE ? Dictionary.getInstance().getEngVieMap() : Dictionary.getInstance().getVieEngMap();
                if(searchingMeaning.isFavoriate()) {
                    searchingMeaning.setFavoriate(false);
                    XMLUtil.addWord(map, new File(fileName));
                    changeFavoriteBtnStatus(false);
                } else {
                    searchingMeaning.setFavoriate(true);
                    XMLUtil.addWord(map, new File(fileName));
                    changeFavoriteBtnStatus(true);
                }
                
                dialog.dispose();
                
            
            }
        });
        
        dialog.setVisible(true);
        
    }//GEN-LAST:event_addFavoriteBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        String searchWord = searchWordField.getText();
        removeBtn.setEnabled(true);
        addFavoriteBtn.setEnabled(true);

        if(searchWord.trim().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "You need enter a word to search!", "Warning", JOptionPane.WARNING_MESSAGE);
            resultField.setText("");
            changeFavoriteBtnStatus(false);
            removeBtn.setEnabled(false);
            addFavoriteBtn.setEnabled(false);
            return;
        }

        Meaning meaning = Dictionary.getInstance().searchWord(searchWord, mode);

        if(meaning == null) {
            JOptionPane.showMessageDialog(rootPane, "No word found!", "Information", JOptionPane.INFORMATION_MESSAGE);
            resultField.setText("");
            changeFavoriteBtnStatus(false);
            removeBtn.setEnabled(false);
            addFavoriteBtn.setEnabled(false);
            return;
        }

        if(meaning.isFavoriate()) {
            changeFavoriteBtnStatus(true);

        } else {
            changeFavoriteBtnStatus(false);
        }

        searchingWord = searchWord.trim().toLowerCase();
        searchingMeaning = meaning;
        SearchLog log = new SearchLog(new Date(System.currentTimeMillis()), searchWord);
        Dictionary.getInstance().addLog(log);
        XMLUtil.addLog(Dictionary.getInstance().getSearchLogs(), new File("search_log.xml"));

        resultField.setText(meaning.getMeaning());
        resultField.setCaretPosition(0);

    }//GEN-LAST:event_searchBtnActionPerformed

    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed

        int option = JOptionPane.showConfirmDialog(rootPane, "Are you sure to remove this word from your directory", "Confirm", JOptionPane.YES_NO_OPTION);
        if(option == JOptionPane.NO_OPTION) {
            return;
        }

        String word = searchWordField.getText();
        ProcessingDialog dialog = new ProcessingDialog(this, true);
        
        dialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                searchWordField.setText("");
                resultField.setText("");
                removeBtn.setEnabled(false);
                changeFavoriteBtnStatus(false);
                addFavoriteBtn.setEnabled(false);

                JOptionPane.showMessageDialog(rootPane, "Deleted successfully!", "Information", JOptionPane.INFORMATION_MESSAGE);
            }

            @Override
            public void windowOpened(WindowEvent e) {
                Dictionary.getInstance().removeWord(word, mode);
                if(mode == Dictionary.Mode.ENG_VIE_MODE) {
                    XMLUtil.removeWord(word, new File("Anh_Viet.xml"));
                } else {
                    XMLUtil.removeWord(word, new File("Viet_Anh.xml"));
                }
                
                dialog.dispose();
                
            
            }
        });
        
        dialog.setVisible(true);
    }//GEN-LAST:event_removeBtnActionPerformed

    private void searchWordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchWordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchWordFieldActionPerformed

    private void swapBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swapBtnActionPerformed
        searchWordField.setText("");
        resultField.setText("");
        removeBtn.setEnabled(false);
        addFavoriteBtn.setEnabled(false);
        if(mode == Dictionary.Mode.ENG_VIE_MODE) {
            mode = Dictionary.Mode.VIE_ENG_MODE;
            inputLable.setText("Vietnamese");
            outputLabel.setText("English");
        } else {
            mode = Dictionary.Mode.ENG_VIE_MODE;
            inputLable.setText("English");
            outputLabel.setText("Vietnamese");
        }

        changeFavoriteBtnStatus(false);
    }//GEN-LAST:event_swapBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFavoriteBtn;
    private javax.swing.JButton addWordBtn;
    private javax.swing.JButton favoriteListBtn;
    private javax.swing.JLabel inputLable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JButton removeBtn;
    private javax.swing.JTextArea resultField;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton searchLogBtn;
    private javax.swing.JTextField searchWordField;
    private javax.swing.JButton swapBtn;
    // End of variables declaration//GEN-END:variables
}
